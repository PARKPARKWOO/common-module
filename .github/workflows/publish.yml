name: publish

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  cicd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: adopt

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew --info test

      - name: Extract versions for all modules
        id: extract_versions
#        module 추가되면 같이 추가해줘야한다.
        run: |
          MODULES=("apm" "coroutine-feign" "domain-auth" "grpc" "http" "mapper")
          for module in "${MODULES[@]}"; do
            if [[ -f "$module/gradle.properties" ]]; then
              VERSION=$(awk -F '=' '/^version/{print $2}' $module/gradle.properties | xargs)
              if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
                echo "${module}_VERSION=$VERSION" >> $GITHUB_ENV
              else
                echo "${module}_VERSION=${VERSION}-SNAPSHOT" >> $GITHUB_ENV
              fi
            fi
          done

      - name: Print extracted versions
        run: |
          echo "Apm version: ${{ env.apm_VERSION }}"
          echo "Coroutine-Feign version: ${{ env.coroutine-feign_VERSION }}"
          echo "Domain-Auth version: ${{ env.domain-auth_VERSION }}"
          echo "Grpc version: ${{ env.grpc_VERSION }}"
          echo "Http version: ${{ env.http_VERSION }}"

      - name: Publish all modules
        run: |
          MODULES=("apm" "coroutine-feign" "domain-auth" "grpc" "http" "mapper" )
          for module in "${MODULES[@]}"; do
            ./gradlew :$module:publish -Pversion=${{ env.${module}_VERSION }} -Pgpr.user=${{ github.actor }} -Pgpr.key=${{ secrets.GIT_TOKEN }}
          done
