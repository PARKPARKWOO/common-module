name: publish

on:
  push:
    branches-ignore:
      - main # main 브랜치는 제외
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: adopt

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract module name from branch
        id: extract_module
        run: |
          MODULE=$(echo "${{ github.ref_name }}" | cut -d'/' -f1)
          echo "MODULE=$MODULE" >> $GITHUB_ENV
          echo "Extracted module: $MODULE"

      - name: Extract VERSION from gradle.properties
        id: extract_version
        run: |
          if [ -f "$MODULE/gradle.properties" ]; then
            VERSION=$(awk -F '=' '/^version/{print $2}' $MODULE/gradle.properties)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "Extracted version: $VERSION"
          else
            echo "gradle.properties 파일이 $MODULE 디렉토리에 없습니다."
            exit 1
          fi

      - name: Publish specific module
        run: |
          echo "Publishing module: $MODULE with version: $VERSION"
          ./gradlew ":$MODULE:publish" \
            -Pversion="$VERSION" \
            -Pgpr.user="${{ github.actor }}" \
            -Pgpr.key="${{ secrets.GIT_TOKEN }}"
        env:
          MODULE: ${{ env.MODULE }}
          VERSION: ${{ env.VERSION }}
